/*

AMD Vivado v2023.2 (64-bit) [Major: 2023, Minor: 2]
SW Build: 4029153 on Fri Oct 13 20:14:34 MDT 2023
IP Build: 4028589 on Sat Oct 14 00:45:43 MDT 2023
IP Build: 4028589 on Sat Oct 14 00:45:43 MDT 2023

Process ID (PID): 1296
License: Customer
Mode: GUI Mode

Current time: 	Thu Jan 25 06:59:43 CET 2024
Time zone: 	Central European Standard Time (Europe/Stockholm)

OS: Windows 11
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 16

Screen size: 1920x1080
Local screen bounds: x = 0, y = 0, width = 1920, height = 1032
Screen resolution (DPI): 100
Available screens: 2
Default font: family=Dialog,name=Dialog,style=plain,size=12
Scale size: 12
OS font scaling: 100%
Anti-Alias Enabled: false

Java version: 	17.0.7 64-bit
JavaFX version: 17.0.1
Java home: 	D:/school/Vivado/2023.2/tps/win64/jre17.0.7_7
Java executable: 	D:/school/Vivado/2023.2/tps/win64/jre17.0.7_7/bin/java.exe
Java arguments: 	[-Dsun.java2d.pmoffscreen=false, -Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2, -Dsun.java2d.xrender=false, -Dsun.java2d.d3d=false, -Dsun.awt.nopixfmt=true, -Dsun.java2d.dpiaware=true, -Dsun.java2d.uiScale.enabled=false, -Dswing.aatext=true, -XX:-UsePerfData, -Djdk.map.althashing.threshold=512, -XX:StringTableSize=4072, -XX:+UseStringDeduplication, -XX:MaxGCPauseMillis=200, -XX:+ParallelRefProcEnabled, --add-opens=java.desktop/javax.swing.plaf.synth=ALL-UNNAMED, --add-opens=java.base/java.nio=ALL-UNNAMED, --add-opens=java.desktop/sun.swing=ALL-UNNAMED, --add-opens=java.desktop/javax.swing=ALL-UNNAMED, --add-opens=java.desktop/javax.swing.tree=ALL-UNNAMED, --add-opens=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED, --add-opens=java.desktop/javax.swing.plaf.synth=ALL-UNNAMED, --add-opens=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED, --add-opens=java.desktop/javax.swing=ALL-UNNAMED, --add-opens=java.desktop/javax.swing.tree=ALL-UNNAMED, --add-opens=java.desktop/java.awt.event=ALL-UNNAMED, --add-exports=java.desktop/javax.swing.plaf.synth=ALL-UNNAMED, --add-exports=java.base/java.nio=ALL-UNNAMED, --add-exports=java.desktop/sun.swing=ALL-UNNAMED, --add-exports=java.desktop/javax.swing=ALL-UNNAMED, --add-exports=java.desktop/javax.swing.tree=ALL-UNNAMED, --add-exports=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED, --add-exports=java.desktop/sun.swing=ALL-UNNAMED, --add-exports=java.desktop/sun.swing.table=ALL-UNNAMED, --add-exports=java.desktop/sun.swing.plaf.synth=ALL-UNNAMED, --add-exports=java.desktop/sun.awt.shell=ALL-UNNAMED, --add-exports=java.base/sun.security.action=ALL-UNNAMED, --add-exports=java.desktop/sun.font=ALL-UNNAMED, -XX:NewSize=80m, -XX:MaxNewSize=80m, -Xms512m, -Xmx4072m, -Xss10m]
Java initial memory (-Xms): 	512 MB
Java maximum memory (-Xmx):	 3 GB

User name: 	ellio
User home directory: C:/Users/ellio
User working directory: C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1
User country: 	SE
User language: 	sv
User locale: 	sv_SE

RDI_BASEROOT: D:/school/Vivado
HDI_APPROOT: D:/school/Vivado/2023.2
RDI_DATADIR: D:/school/Vivado/2023.2/data
RDI_BINDIR: D:/school/Vivado/2023.2/bin

Vivado preferences file: C:/Users/ellio/AppData/Roaming/Xilinx/Vivado/2023.2/vivado.xml
Vivado preferences directory: C:/Users/ellio/AppData/Roaming/Xilinx/Vivado/2023.2/
Vivado layouts directory: C:/Users/ellio/AppData/Roaming/Xilinx/Vivado/2023.2/data/layouts
PlanAhead jar file: 	D:/school/Vivado/2023.2/lib/classes/planAhead.jar
Vivado log file: 	C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/vivado.log
Vivado journal file: 	C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/vivado.jou
Engine tmp dir: 	C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/.Xil/Vivado-1296-DESKTOP-OV3A0NL
Non-Default Parameters:	[]

Xilinx & AMD Environment Variables
--------------------------------------------------------------------------------------------
RDI_APPROOT: D:/school/Vivado/2023.2
RDI_ARGS:  -gui_launcher_event rodinguilauncherevent1100 "C:\Users\ellio\OneDrive\Skrivbord\Robotik.Year.3\inbygda system\DVA494\Lab2\Step1\Step1.xpr"
RDI_ARGS_FUNCTION: RDI_EXEC_DEFAULT
RDI_BASEROOT: D:/school/Vivado
RDI_BINDIR: D:/school/Vivado/2023.2/bin
RDI_BINROOT: D:/school/Vivado/2023.2/bin
RDI_BUILD: yes
RDI_CHECK_PROG: True
RDI_DATADIR: D:/school/Vivado/2023.2/data
RDI_INSTALLROOT: D:/school
RDI_INSTALLVER: 2023.2
RDI_INSTALLVERSION: 2023.2
RDI_ISE_PLATFORM: nt64
RDI_JAVACEFROOT: D:/school/Vivado/2023.2/tps/win64/java-cef-95.0.4638.69
RDI_JAVAFXROOT: D:/school/Vivado/2023.2/tps/win64/javafx-sdk-17.0.1
RDI_JAVAROOT: D:/school/Vivado/2023.2/tps/win64/jre17.0.7_7
RDI_JAVA_VERSION: 17.0.7_7
RDI_LIBDIR: D:/school/Vivado/2023.2/lib/win64.o
RDI_MINGW_LIB: D:/school/Vivado/2023.2\tps\mingw\6.2.0\win64.o\nt\bin;D:/school/Vivado/2023.2\tps\mingw\6.2.0\win64.o\nt\libexec\gcc\x86_64-w64-mingw32\6.2.0
RDI_OPT_EXT: .o
RDI_PLATFORM: win64
RDI_PREPEND_PATH: D:/school/Vivado/2023.2/ids_lite/ISE/bin/nt64;D:/school/Vivado/2023.2/ids_lite/ISE/lib/nt64
RDI_PROG: D:/school/Vivado/2023.2/bin/unwrapped/win64.o/vivado.exe
RDI_PROGNAME: vivado.exe
RDI_PYTHON3: D:/school/Vivado/2023.2\tps\win64\python-3.8.3
RDI_PYTHON3_VERSION: 3.8.3
RDI_PYTHONHOME: D:/school/Vivado/2023.2\tps\win64\python-3.8.3
RDI_PYTHONPATH: D:/school/Vivado/2023.2\tps\win64\python-3.8.3;D:/school/Vivado/2023.2\tps\win64\python-3.8.3\bin;D:/school/Vivado/2023.2\tps\win64\python-3.8.3\lib;D:/school/Vivado/2023.2\tps\win64\python-3.8.3\lib\site-packages
RDI_PYTHON_LD_LIBPATH: D:/school/Vivado/2023.2\tps\win64\python-3.8.3\lib
RDI_SESSION_INFO: C:\Users\ellio\OneDrive\Skrivbord\Robotik.Year.3\inbygdasystem\DVA494\Lab2\Step1:DESKTOP-OV3A0NL-2024-01-25_6-59-32,44
RDI_SHARED_DATA: D:/school/SharedData/2023.2/data
RDI_TPS_ROOT: D:/school/Vivado/2023.2/tps/win64
RDI_USE_JDK17: True
RDI_VERBOSE: False
XILINX: D:/school/Vivado/2023.2/ids_lite/ISE
XILINX_DSP: D:/school/Vivado/2023.2/ids_lite/ISE
XILINX_HLS: D:/school/Vitis_HLS/2023.2
XILINX_PLANAHEAD: D:/school/Vivado/2023.2
XILINX_VIVADO: D:/school/Vivado/2023.2
XILINX_VIVADO_HLS: D:/school/Vivado/2023.2
_RDI_BINROOT: D:\school\Vivado\2023.2\bin
_RDI_CWD: C:\Users\ellio\OneDrive\Skrivbord\Robotik.Year.3\inbygda system\DVA494\Lab2\Step1


GUI allocated memory:	716 MB
GUI max memory:		4,072 MB
Engine allocated memory: 999 MB

Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// TclEventType: PROJECT_OPEN_DIALOG
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// Opening Vivado Project: C:\Users\ellio\OneDrive\Skrivbord\Robotik.Year.3\inbygda system\DVA494\Lab2\Step1\Step1.xpr. Version: Vivado v2023.2 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: FLOW_ADDED
// Tcl Message: open_project {C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.xpr} 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1' 
// HMemoryUtils.trashcanNow. Engine heap size: 1,059 MB. GUI used memory: 66 MB. Current time: 1/25/24, 6:59:44 AM CET
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_NEW
// [GUI Memory]: 101 MB (+103722kb) [00:00:11]
// [Engine Memory]: 1,064 MB (+964426kb) [00:00:11]
// [GUI Memory]: 139 MB (+34509kb) [00:00:12]
// WARNING: HEventQueue.dispatchEvent() is taking  1662 ms.
// Tcl Message: open_project {C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.xpr} 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1' 
// Tcl Message: INFO: [Project 1-313] Project file moved from 'C:/Users/Ashley Bjrs/AppData/Roaming/Xilinx/Vivado/DVA494/Lab2/Step1' since last save. INFO: [filemgmt 56-3] Default IP Output Path : Could not find the directory 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.gen/sources_1'. 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/school/Vivado/2023.2/data/ip'. 
// [Engine Memory]: 1,139 MB (+22182kb) [00:00:13]
// Project name: Step1; location: C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1; part: xc7a35tcpg236-1
// Tcl Message: open_project: Time (s): cpu = 00:00:09 ; elapsed = 00:00:08 . Memory (MB): peak = 1612.906 ; gain = 260.359 
dismissDialog("Open Project"); // bq (Open Project Progress)
// Elapsed time: 10 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd)]", 1); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2, true, false, false, false, false, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Double Click - Node
selectCodeEditor("Step1.vhd", 505, 309); // ad (Step1.vhd)
// Elapsed time: 10 seconds
selectCodeEditor("Step1.vhd", 69, 228); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 69, 228, false, false, false, false, true); // ad (Step1.vhd) - Double Click
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Simulation, Run Simulation]", 10, false); // f (PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, Flow Navigator Tree)
selectMenuItem(PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, "Run Behavioral Simulation"); // ao (PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, simulation_run_behavioral_menu)
// Run Command: PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL
// TclEventType: LAUNCH_SIM
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: launch_simulation 
// Tcl Message: Command: launch_simulation  
// Tcl Message: INFO: [Vivado 12-12493] Simulation top is 'tb' 
// Tcl Message: "xvhdl --incr --relax -prj tb_vhdl.prj" ECHO is off. ECHO is off. 
// TclEventType: LAUNCH_SIM_LOG
// Tcl Message: INFO: [USF-XSim-69] 'compile' step finished in '2' seconds INFO: [USF-XSim-3] XSim::Elaborate design INFO: [USF-XSim-61] Executing 'ELABORATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' 
// Tcl Message: "xelab --incr --debug typical --relax --mt 2 -L xil_defaultlib -L secureip --snapshot tb_behav xil_defaultlib.tb -log elaborate.log" ECHO is off. ECHO is off. 
// TclEventType: LAUNCH_SIM
// TclEventType: LOAD_FEATURE
// Tcl Message: INFO: [USF-XSim-69] 'elaborate' step finished in '3' seconds INFO: [USF-XSim-4] XSim::Simulate design INFO: [USF-XSim-61] Executing 'SIMULATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' INFO: [USF-XSim-98] *** Running xsim 
// Tcl Message:    with args "tb_behav -key {Behavioral:sim_1:Functional:tb} -tclbatch {tb.tcl} -log {simulate.log}" 
// Tcl Message: INFO: [USF-XSim-8] Loading simulator feature 
// TclEventType: SIMULATION_CREATE_SIMULATION_OBJECT
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// Tcl Message: Time resolution is 1 ps 
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
closeView(PAResourceOtoP.PAViews_PROJECT_SUMMARY, "Project Summary"); // t (PAResourceOtoP.PAViews_PROJECT_SUMMARY, PlanAheadTabProject Summary)
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_TITLE
// HMemoryUtils.trashcanNow. Engine heap size: 1,148 MB. GUI used memory: 82 MB. Current time: 1/25/24, 7:00:29 AM CET
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_CLEAR_CURRENT_LINE
// Tcl Message: source tb.tcl 
// Tcl Message: # set curr_wave [current_wave_config] # if { [string length $curr_wave] == 0 } { #   if { [llength [get_objects]] > 0} { #     add_wave / #     set_property needs_save false [current_wave_config] #   } else { #      send_msg_id Add_Wave-1 WARNING "No top level signals found. Simulator will start without a wave window. If you want to open a wave window go to 'File->New Waveform Configuration' or type 'create_wave_config' in the TCL console." #   } # } # run 1000ns 
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_MOVE_CURSOR
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: SIMULATION_OBJECT_TREE_RESTORED
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: SIMULATION_CURRENT_SCOPE_CHANGED
// TclEventType: SIMULATION_CURRENT_STACK_CHANGED
// TclEventType: SIMULATION_UPDATE_STACK_FRAMES
// TclEventType: SIMULATION_CURRENT_STACK_FRAME_CHANGED
// TclEventType: SIMULATION_UPDATE_LOCALS
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// Tcl Message: INFO: [USF-XSim-96] XSim completed. Design snapshot 'tb_behav' loaded. INFO: [USF-XSim-97] XSim simulation ran for 1000ns 
// Tcl Message: launch_simulation: Time (s): cpu = 00:00:01 ; elapsed = 00:00:08 . Memory (MB): peak = 1612.906 ; gain = 0.000 
// 'd' command handler elapsed time: 8 seconds
dismissDialog("Run Simulation"); // e (Run Simulation Progress)
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,158 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:30 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,166 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,166 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,172 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,177 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,180 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,180 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,182 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,183 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,183 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,183 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,183 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,185 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,185 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,185 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,185 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,185 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,186 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,206 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// [Engine Memory]: 1,206 MB (+10442kb) [00:00:56]
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,206 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,206 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 81 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:32 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:32 AM CET
expandTree(RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE, "[true, s0[2:0]]", 9); // k (RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE)
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
expandTree(RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE, "[true, o[3:0]]", 8); // k (RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE)
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 79 MB. Current time: 1/25/24, 7:00:37 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
collapseTree(RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE, "[true, o[3:0]]", 8); // k (RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE)
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:46 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:48 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:49 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:50 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:51 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:52 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:56 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:57 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:58 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:58 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:59 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:00:59 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:00 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:00 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:00 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:00 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:01 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:01 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:01 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:02 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:02 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:03 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:03 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:04 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,207 MB. GUI used memory: 80 MB. Current time: 1/25/24, 7:01:04 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// [GUI Memory]: 148 MB (+1385kb) [00:01:32]
// [Engine Memory]: 1,289 MB (+24150kb) [00:01:32]
// Elapsed time: 32 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Project Manager, Settings]", 1, false); // f (PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, Flow Navigator Tree)
// Run Command: RDIResourceCommand.RDICommands_SETTINGS
// Tcl (Dont Echo) Command: 'rdi::info_commands {device::*}'
// Tcl (Dont Echo) Command: 'rdi::info_commands {debug::*}'
// Tcl (Dont Echo) Command: 'rdi::info_commands {*}'
// WARNING: HEventQueue.dispatchEvent() is taking  1125 ms.
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Project Manager, Add Sources]", 2, false); // f (PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, Flow Navigator Tree)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
dismissDialog("Add Sources"); // c (dialog0)
dismissDialog("Settings"); // d (dialog1)
// [GUI Memory]: 185 MB (+31775kb) [00:01:40]
selectTab((HResource) null, (HResource) null, "Sources", 1); // aa
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2, true, false, false, false, false, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Double Click - Node
// TclEventType: WAVEFORM_CLOSE_WCFG
closeView(RDIResource.RDIViews_WAVEFORM_VIEWER, "Untitled 1"); // u (RDIResource.RDIViews_WAVEFORM_VIEWER, PlanAheadTabWaveform Viewer)
selectCodeEditor("Step1.vhd", 624, 241); // ad (Step1.vhd)
// Elapsed time: 67 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd), Mux4To1_1 : Mux4To1(Arch_Mux4To1) (Mux4To1.vhd)]", 3, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd), Mux4To1_1 : Mux4To1(Arch_Mux4To1) (Mux4To1.vhd)]", 3, true, false, false, false, false, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Double Click - Node
selectCodeEditor("Mux4To1.vhd", 49, 89); // ad (Mux4To1.vhd)
selectCodeEditor("Mux4To1.vhd", 46, 298); // ad (Mux4To1.vhd)
selectCodeEditor("Mux4To1.vhd", 400, 442); // ad (Mux4To1.vhd)
// Elapsed time: 10 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd), Mux2To1_1 : Mux2To1(Arch_Mux2To1) (Mux2To1.vhd)]", 8, false); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd), Mux2To1_1 : Mux2To1(Arch_Mux2To1) (Mux2To1.vhd)]", 8, false, false, false, false, false, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Double Click
// Elapsed time: 52 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, tb(arch_tb) (Step1.vhd), mux8to1_temp0 : Mux8to1(Arch_Mux8To1) (Step1.vhd)]", 2, true, false, false, false, false, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Double Click - Node
selectCodeEditor("Step1.vhd", 316, 471); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 328, 472); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 387, 469); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 391, 487); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 328, 486); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 439, 499); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 568, 498); // ad (Step1.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 04m:16s
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Simulation, Run Simulation]", 10, false); // f (PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, Flow Navigator Tree)
selectMenuItem(PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, "Run Behavioral Simulation"); // ao (PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, simulation_run_behavioral_menu)
// Run Command: PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL
selectButton("OptionPane.button", "Yes"); // JButton (OptionPane.button)
// TclEventType: SIMULATION_CLOSE_SIMULATION
// Tcl Message: close_sim 
// Tcl Message: INFO: [Simtcl 6-16] Simulation closed 
dismissDialog("Close"); // bq (Close Progress)
// TclEventType: LAUNCH_SIM
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: launch_simulation 
// Tcl Message: Command: launch_simulation  
// Tcl Message: INFO: [Vivado 12-12493] Simulation top is 'tb' 
// TclEventType: LAUNCH_SIM_LOG
// Tcl Message: "xvhdl --incr --relax -prj tb_vhdl.prj" ECHO is off. ECHO is off. INFO: [VRFC 10-163] Analyzing VHDL file "C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.srcs/sources_1/new/Step1.vhd" into library xil_defaultlib INFO: [VRFC 10-3107] analyzing entity 'Mux8to1' INFO: [VRFC 10-3107] analyzing entity 'tb' 
// Tcl Message: INFO: [USF-XSim-69] 'compile' step finished in '2' seconds INFO: [USF-XSim-3] XSim::Elaborate design INFO: [USF-XSim-61] Executing 'ELABORATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' 
// Tcl Message: "xelab --incr --debug typical --relax --mt 2 -L xil_defaultlib -L secureip --snapshot tb_behav xil_defaultlib.tb -log elaborate.log" ECHO is off. ECHO is off. 
// TclEventType: LAUNCH_SIM
// Tcl Message: INFO: [USF-XSim-69] 'elaborate' step finished in '1' seconds INFO: [USF-XSim-4] XSim::Simulate design INFO: [USF-XSim-61] Executing 'SIMULATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' INFO: [USF-XSim-98] *** Running xsim 
// Tcl Message:    with args "tb_behav -key {Behavioral:sim_1:Functional:tb} -tclbatch {tb.tcl} -log {simulate.log}" 
// Tcl Message: INFO: [USF-XSim-8] Loading simulator feature 
// TclEventType: SIMULATION_CREATE_SIMULATION_OBJECT
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// Tcl Message: Time resolution is 1 ps 
closeView(PAResourceOtoP.PAViews_PROJECT_SUMMARY, "Project Summary"); // t (PAResourceOtoP.PAViews_PROJECT_SUMMARY, PlanAheadTabProject Summary)
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// HMemoryUtils.trashcanNow. Engine heap size: 1,349 MB. GUI used memory: 173 MB. Current time: 1/25/24, 7:04:11 AM CET
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_CLEAR_CURRENT_LINE
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_MOVE_CURSOR
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: SIMULATION_OBJECT_TREE_RESTORED
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: SIMULATION_CURRENT_SCOPE_CHANGED
// TclEventType: SIMULATION_CURRENT_STACK_CHANGED
// TclEventType: SIMULATION_UPDATE_STACK_FRAMES
// TclEventType: SIMULATION_CURRENT_STACK_FRAME_CHANGED
// TclEventType: SIMULATION_UPDATE_LOCALS
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// Tcl Message: source tb.tcl 
// Tcl Message: # set curr_wave [current_wave_config] # if { [string length $curr_wave] == 0 } { #   if { [llength [get_objects]] > 0} { #     add_wave / #     set_property needs_save false [current_wave_config] #   } else { #      send_msg_id Add_Wave-1 WARNING "No top level signals found. Simulator will start without a wave window. If you want to open a wave window go to 'File->New Waveform Configuration' or type 'create_wave_config' in the TCL console." #   } # } # run 1000ns 
// Tcl Message: INFO: [USF-XSim-96] XSim completed. Design snapshot 'tb_behav' loaded. INFO: [USF-XSim-97] XSim simulation ran for 1000ns 
// Tcl Message: launch_simulation: Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 2627.109 ; gain = 0.000 
// 'd' command handler elapsed time: 7 seconds
dismissDialog("Run Simulation"); // e (Run Simulation Progress)
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// Elapsed Time for: 'L.f': 04m:26s
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,349 MB. GUI used memory: 181 MB. Current time: 1/25/24, 7:04:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,349 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,349 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
expandTree(RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE, "[true, o[3:0]]", 8); // k (RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE)
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:18 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
collapseTree(RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE, "[true, o[3:0]]", 8); // k (RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE)
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:23 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:24 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:25 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:25 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:25 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:26 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:28 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:28 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:04:28 AM CET
// TclEventType: WAVEFORM_CLOSE_WCFG
// Elapsed time: 11 seconds
closeView(RDIResource.RDIViews_WAVEFORM_VIEWER, "Untitled 2"); // u (RDIResource.RDIViews_WAVEFORM_VIEWER, PlanAheadTabWaveform Viewer)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Step1.vhd", 0); // o (PlanAheadTabBaseWorkspace_JideTabbedPane)
selectCodeEditor("Step1.vhd", 562, 455); // ad (Step1.vhd)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("Step1.vhd", 563, 455); // ad (Step1.vhd)
// Elapsed Time for: 'L.f': 04m:52s
// Elapsed Time for: 'L.f': 04m:54s
// Elapsed time: 19 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Mux4To1.vhd", 1); // o (PlanAheadTabBaseWorkspace_JideTabbedPane)
// Elapsed time: 16 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Step1.vhd", 0); // o (PlanAheadTabBaseWorkspace_JideTabbedPane)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Mux4To1.vhd", 1); // o (PlanAheadTabBaseWorkspace_JideTabbedPane)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Step1.vhd", 0); // o (PlanAheadTabBaseWorkspace_JideTabbedPane)
// Elapsed time: 51 seconds
selectCodeEditor("Step1.vhd", 231, 482); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 251, 478); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 271, 482); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 293, 486); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 469, 421); // ad (Step1.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 06m:32s
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Simulation, Run Simulation]", 10, false); // f (PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, Flow Navigator Tree)
selectMenuItem(PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, "Run Behavioral Simulation"); // ao (PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, simulation_run_behavioral_menu)
// Run Command: PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL
selectButton("OptionPane.button", "Yes"); // JButton (OptionPane.button)
// TclEventType: SIMULATION_CLOSE_SIMULATION
// Tcl Message: close_sim 
// Tcl Message: INFO: [Simtcl 6-16] Simulation closed 
dismissDialog("Close"); // bq (Close Progress)
// TclEventType: LAUNCH_SIM
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: launch_simulation 
// Tcl Message: Command: launch_simulation  
// Tcl Message: INFO: [Vivado 12-12493] Simulation top is 'tb' 
// TclEventType: LAUNCH_SIM_LOG
// Tcl Message: "xvhdl --incr --relax -prj tb_vhdl.prj" ECHO is off. ECHO is off. INFO: [VRFC 10-163] Analyzing VHDL file "C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.srcs/sources_1/new/Step1.vhd" into library xil_defaultlib INFO: [VRFC 10-3107] analyzing entity 'Mux8to1' INFO: [VRFC 10-3107] analyzing entity 'tb' 
// Tcl Message: INFO: [USF-XSim-69] 'compile' step finished in '2' seconds INFO: [USF-XSim-3] XSim::Elaborate design INFO: [USF-XSim-61] Executing 'ELABORATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' 
// Tcl Message: "xelab --incr --debug typical --relax --mt 2 -L xil_defaultlib -L secureip --snapshot tb_behav xil_defaultlib.tb -log elaborate.log" ECHO is off. ECHO is off. 
// TclEventType: LAUNCH_SIM
// Tcl Message: INFO: [USF-XSim-69] 'elaborate' step finished in '1' seconds INFO: [USF-XSim-4] XSim::Simulate design INFO: [USF-XSim-61] Executing 'SIMULATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' INFO: [USF-XSim-98] *** Running xsim 
// Tcl Message:    with args "tb_behav -key {Behavioral:sim_1:Functional:tb} -tclbatch {tb.tcl} -log {simulate.log}" 
// Tcl Message: INFO: [USF-XSim-8] Loading simulator feature 
// TclEventType: SIMULATION_CREATE_SIMULATION_OBJECT
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
closeView(PAResourceOtoP.PAViews_PROJECT_SUMMARY, "Project Summary"); // t (PAResourceOtoP.PAViews_PROJECT_SUMMARY, PlanAheadTabProject Summary)
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_TITLE
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 103 MB. Current time: 1/25/24, 7:06:28 AM CET
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_CLEAR_CURRENT_LINE
// Tcl Message: Time resolution is 1 ps 
// Tcl Message: source tb.tcl 
// Tcl Message: # set curr_wave [current_wave_config] # if { [string length $curr_wave] == 0 } { #   if { [llength [get_objects]] > 0} { #     add_wave / #     set_property needs_save false [current_wave_config] #   } else { #      send_msg_id Add_Wave-1 WARNING "No top level signals found. Simulator will start without a wave window. If you want to open a wave window go to 'File->New Waveform Configuration' or type 'create_wave_config' in the TCL console." #   } # } # run 1000ns 
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_MOVE_CURSOR
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: SIMULATION_OBJECT_TREE_RESTORED
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: SIMULATION_CURRENT_SCOPE_CHANGED
// TclEventType: SIMULATION_CURRENT_STACK_CHANGED
// TclEventType: SIMULATION_UPDATE_STACK_FRAMES
// TclEventType: SIMULATION_CURRENT_STACK_FRAME_CHANGED
// TclEventType: SIMULATION_UPDATE_LOCALS
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// Tcl Message: INFO: [USF-XSim-96] XSim completed. Design snapshot 'tb_behav' loaded. INFO: [USF-XSim-97] XSim simulation ran for 1000ns 
// Tcl Message: launch_simulation: Time (s): cpu = 00:00:00 ; elapsed = 00:00:05 . Memory (MB): peak = 2631.645 ; gain = 0.000 
// 'd' command handler elapsed time: 7 seconds
dismissDialog("Run Simulation"); // e (Run Simulation Progress)
// Elapsed Time for: 'L.f': 06m:42s
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 102 MB. Current time: 1/25/24, 7:06:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 102 MB. Current time: 1/25/24, 7:06:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 104 MB. Current time: 1/25/24, 7:06:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 103 MB. Current time: 1/25/24, 7:06:31 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
selectGraphicalView(RDIResource.RDIViews_WAVEFORM_VIEWER, 494, 266); // b (RDIResource.RDIViews_WAVEFORM_VIEWER, PlanAheadTabWaveform Viewer_viewer)
/********** leftMouseClick (1523, 455, true); // b (RDIResource.RDIViews_WAVEFORM_VIEWER, PlanAheadTabWaveform Viewer_viewer) **********/
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_MOVE_CURSOR
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 102 MB. Current time: 1/25/24, 7:06:32 AM CET
selectGraphicalView(RDIResource.RDIViews_WAVEFORM_VIEWER, 501, 248); // b (RDIResource.RDIViews_WAVEFORM_VIEWER, PlanAheadTabWaveform Viewer_viewer)
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
/********** leftMouseClick (1530, 439, true); // b (RDIResource.RDIViews_WAVEFORM_VIEWER, PlanAheadTabWaveform Viewer_viewer) **********/
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_SELECTED_WAVE_OBJECT_NAMES
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_MOVE_CURSOR
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Step1.vhd", 0); // o (PlanAheadTabBaseWorkspace_JideTabbedPane)
selectCodeEditor("Step1.vhd", 232, 466); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 251, 468); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 273, 469); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 294, 469); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 232, 483); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 254, 489); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 275, 482); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 294, 486); // ad (Step1.vhd)
selectCodeEditor("Step1.vhd", 619, 468); // ad (Step1.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 07m:10s
// Elapsed Time for: 'L.f': 07m:12s
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Simulation, Run Simulation]", 10, false); // f (PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, Flow Navigator Tree)
selectMenuItem(PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, "Run Behavioral Simulation"); // ao (PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, simulation_run_behavioral_menu)
// Run Command: PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL
selectButton("OptionPane.button", "Yes"); // JButton (OptionPane.button)
// TclEventType: WAVEFORM_CLOSE_WCFG
// TclEventType: SIMULATION_CLOSE_SIMULATION
// Tcl Message: close_sim 
// Tcl Message: INFO: [Simtcl 6-16] Simulation closed 
dismissDialog("Close"); // bq (Close Progress)
// TclEventType: LAUNCH_SIM
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: launch_simulation 
// Tcl Message: Command: launch_simulation  
// Tcl Message: INFO: [Vivado 12-12493] Simulation top is 'tb' 
// TclEventType: LAUNCH_SIM_LOG
// Tcl Message: "xvhdl --incr --relax -prj tb_vhdl.prj" ECHO is off. ECHO is off. INFO: [VRFC 10-163] Analyzing VHDL file "C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.srcs/sources_1/new/Step1.vhd" into library xil_defaultlib INFO: [VRFC 10-3107] analyzing entity 'Mux8to1' INFO: [VRFC 10-3107] analyzing entity 'tb' 
// Tcl Message: INFO: [USF-XSim-69] 'compile' step finished in '2' seconds INFO: [USF-XSim-3] XSim::Elaborate design INFO: [USF-XSim-61] Executing 'ELABORATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' 
// Tcl Message: "xelab --incr --debug typical --relax --mt 2 -L xil_defaultlib -L secureip --snapshot tb_behav xil_defaultlib.tb -log elaborate.log" ECHO is off. ECHO is off. 
// TclEventType: LAUNCH_SIM
// Tcl Message: INFO: [USF-XSim-69] 'elaborate' step finished in '1' seconds INFO: [USF-XSim-4] XSim::Simulate design INFO: [USF-XSim-61] Executing 'SIMULATE' step in 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step1/Step1.sim/sim_1/behav/xsim' INFO: [USF-XSim-98] *** Running xsim 
// Tcl Message:    with args "tb_behav -key {Behavioral:sim_1:Functional:tb} -tclbatch {tb.tcl} -log {simulate.log}" 
// Tcl Message: INFO: [USF-XSim-8] Loading simulator feature 
// TclEventType: SIMULATION_CREATE_SIMULATION_OBJECT
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
closeView(PAResourceOtoP.PAViews_PROJECT_SUMMARY, "Project Summary"); // t (PAResourceOtoP.PAViews_PROJECT_SUMMARY, PlanAheadTabProject Summary)
// Tcl Message: Time resolution is 1 ps 
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 114 MB. Current time: 1/25/24, 7:07:11 AM CET
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_CLEAR_CURRENT_LINE
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_MOVE_CURSOR
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: SIMULATION_OBJECT_TREE_RESTORED
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: SIMULATION_CURRENT_SCOPE_CHANGED
// TclEventType: SIMULATION_CURRENT_STACK_CHANGED
// TclEventType: SIMULATION_UPDATE_STACK_FRAMES
// TclEventType: SIMULATION_CURRENT_STACK_FRAME_CHANGED
// TclEventType: SIMULATION_UPDATE_LOCALS
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// Tcl Message: source tb.tcl 
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// Tcl Message: # set curr_wave [current_wave_config] # if { [string length $curr_wave] == 0 } { #   if { [llength [get_objects]] > 0} { #     add_wave / #     set_property needs_save false [current_wave_config] #   } else { #      send_msg_id Add_Wave-1 WARNING "No top level signals found. Simulator will start without a wave window. If you want to open a wave window go to 'File->New Waveform Configuration' or type 'create_wave_config' in the TCL console." #   } # } # run 1000ns 
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// Tcl Message: INFO: [USF-XSim-96] XSim completed. Design snapshot 'tb_behav' loaded. INFO: [USF-XSim-97] XSim simulation ran for 1000ns 
// Tcl Message: launch_simulation: Time (s): cpu = 00:00:00 ; elapsed = 00:00:05 . Memory (MB): peak = 2631.645 ; gain = 0.000 
// 'd' command handler elapsed time: 7 seconds
dismissDialog("Run Simulation"); // e (Run Simulation Progress)
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 106 MB. Current time: 1/25/24, 7:07:13 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 106 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 107 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 107 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 107 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 106 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:14 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:18 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:19 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:19 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:20 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:20 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:20 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:21 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:21 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:21 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:22 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:22 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:23 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:23 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:23 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:24 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:24 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:24 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:24 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:24 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:25 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:25 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:25 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:26 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:26 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:26 AM CET
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 105 MB. Current time: 1/25/24, 7:07:27 AM CET
// Elapsed time: 17 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Step1.vhd", 0); // o (PlanAheadTabBaseWorkspace_JideTabbedPane)
// Elapsed time: 52 seconds
selectCodeEditor("Step1.vhd", 560, 27); // ad (Step1.vhd)
// Elapsed time: 30 seconds
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // ag (PAResourceItoN.MainMenuMgr_FILE, File)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // ag (PAResourceItoN.MainMenuMgr_FILE, File)
selectMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // ag (PAResourceItoN.MainMenuMgr_EDIT, Edit)
dismissMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // ag (PAResourceItoN.MainMenuMgr_EDIT, Edit)
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // ag (PAResourceItoN.MainMenuMgr_FILE, File)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // al (PAResourceItoN.MainMenuMgr_PROJECT, Project)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // al (PAResourceItoN.MainMenuMgr_PROJECT, Project)
selectMenuItem(PAResourceCommand.PACommandNames_NEW_PROJECT, "New..."); // ao (PAResourceCommand.PACommandNames_NEW_PROJECT, new_project_menu)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // ag (PAResourceItoN.MainMenuMgr_FILE, File)
// Run Command: PAResourceCommand.PACommandNames_NEW_PROJECT
selectButton("NEXT", "Next >"); // JButton (NEXT)
setText(PAResourceOtoP.ProjectNameChooser_PROJECT_NAME, "Step3"); // Q (PAResourceOtoP.ProjectNameChooser_PROJECT_NAME)
selectMoreButton(PAResourceOtoP.ProjectNameChooser_CHOOSE_PROJECT_LOCATION, (String) null); // r (PAResourceOtoP.ProjectNameChooser_CHOOSE_PROJECT_LOCATION)
setFolderChooser("C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2");
selectButton("NEXT", "Next >"); // JButton (NEXT)
selectButton("NEXT", "Next >"); // JButton (NEXT)
selectComboBox(PAResourceEtoH.FPGAChooser_FAMILY, "Artix-7", 1); // a.a (PAResourceEtoH.FPGAChooser_FAMILY)
selectComboBox(PAResourceEtoH.FPGAChooser_SPEED, "-1", 1); // a.a (PAResourceEtoH.FPGAChooser_SPEED)
// Elapsed time: 18 seconds
selectComboBox(PAResourceEtoH.FPGAChooser_PACKAGE, "cpg236", 1); // a.a (PAResourceEtoH.FPGAChooser_PACKAGE)
selectTable(PAResourceEtoH.FPGAChooser_FPGA_TABLE, "xc7a15tcpg236-1 ; 236 ; 106 ; 10400 ; 20800 ; 25 ; 0 ; 45 ; 32 ; 2 ; 2 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 0 ; 1 ; 5 ;  ;  ;  ;  ; 0 ;  ;  ;  ;  ;  ;  ; 0.95 ; 0.95 ; 1.05", 0, "xc7a15tcpg236-1", 0); // c (PAResourceEtoH.FPGAChooser_FPGA_TABLE)
selectButton("NEXT", "Next >"); // JButton (NEXT)
selectButton("OptionPane.button", "Yes"); // JButton (OptionPane.button)
// TclEventType: WAVEFORM_CLOSE_WCFG
// TclEventType: SIMULATION_CLOSE_SIMULATION
// Tcl Message: close_sim 
// Tcl Message: INFO: [Simtcl 6-16] Simulation closed 
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 1,350 MB. GUI used memory: 100 MB. Current time: 1/25/24, 7:09:56 AM CET
// Tcl Message: close_project 
dismissDialog("Close"); // bq (Close Progress)
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_NEW
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: create_project Step3 {C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3} -part xc7a15tcpg236-1 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3' 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/school/Vivado/2023.2/data/ip'. 
// TclEventType: FILE_SET_OPTIONS_CHANGE
selectButton("FINISH", "Finish"); // JButton (FINISH)
// 'g' command handler elapsed time: 62 seconds
dismissDialog("Create Project"); // bq (Create Project Progress)
dismissDialog("New Project"); // f (dialog2)
// [Engine Memory]: 1,380 MB (+27498kb) [00:10:26]
// Elapsed time: 14 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Constraints]", 1); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Constraints]", 1); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources]", 0, false, false, false, false, true, false); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Popup Trigger
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // al (PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, Hierarchy Update)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // al (PAResourceQtoS.SrcMenu_IP_HIERARCHY, IP Hierarchy)
selectMenuItem(PAResourceCommand.PACommandNames_ADD_SOURCES, "Add Sources..."); // ao (PAResourceCommand.PACommandNames_ADD_SOURCES, add_sources_menu)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
selectButton("NEXT", "Next >"); // JButton (NEXT)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (PAResourceQtoS.SrcChooserPanel_CREATE_FILE)
selectComboBox(PAResourceAtoD.CreateSrcFileDialog_FILE_TYPE, "VHDL", 3); // bf (PAResourceAtoD.CreateSrcFileDialog_FILE_TYPE)
// Elapsed time: 20 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "FaultInjector"); // Q (PAResourceAtoD.CreateSrcFileDialog_FILE_NAME)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (RDIResource.BaseDialog_OK)
// Tcl Command: 'file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new'
dismissDialog("Create Source File"); // m (dialog5)
// Tcl Message: file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new 
// Tcl Command: 'file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new'
// Tcl Message: file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new 
// Tcl Command: 'file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new'
// Tcl Command: 'file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new'
selectButton("FINISH", "Finish"); // JButton (FINISH)
// 'f' command handler elapsed time: 28 seconds
// Tcl Message: file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new 
// Tcl Message: file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new 
// Tcl Command: 'file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new'
dismissDialog("Add Sources"); // c (dialog4)
// Tcl Command: 'file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new'
// Tcl Message: file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new 
// Tcl Message: file mkdir C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new 
// Tcl Message: file mkdir {C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new} 
// Tcl Message: close [ open {C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new/FaultInjector.vhd} w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files {{C:/Users/ellio/OneDrive/Skrivbord/Robotik.Year.3/inbygda system/DVA494/Lab2/Step3/Step3.srcs/sources_1/new/FaultInjector.vhd}} 
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (RDIResource.BaseDialog_CANCEL)
selectButton("OptionPane.button", "Yes"); // JButton (OptionPane.button)
dismissDialog("Define Module"); // p (dialog6)
// Elapsed Time for: 'L.f': 50s
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 52s
// Tcl Message: update_compile_order -fileset sources_1 
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources]", 0); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, FaultInjector.vhd]", 2, false); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE)
// Elapsed Time for: 'L.f': 54s
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Non-module Files, FaultInjector.vhd]", 2, false, false, false, false, false, true); // E (PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE) - Double Click
// Elapsed Time for: 'L.f': 56s
// Elapsed time: 35 seconds
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 28 seconds
typeControlKey(null, null, 'z');
// Elapsed time: 15 seconds
selectCodeEditor("FaultInjector.vhd", 163, 43); // ad (FaultInjector.vhd)
// Elapsed time: 16 seconds
selectCodeEditor("FaultInjector.vhd", 103, 66); // ad (FaultInjector.vhd)
// Elapsed time: 12 seconds
selectCodeEditor("FaultInjector.vhd", 61, 82); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 68, 77); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 03m:12s
// Elapsed Time for: 'L.f': 03m:14s
// Elapsed time: 66 seconds
selectCodeEditor("FaultInjector.vhd", 298, 76); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 78, 89); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 33 seconds
typeControlKey(null, null, 'z');
selectCodeEditor("FaultInjector.vhd", 267, 113); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 209, 143); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 220, 129); // ad (FaultInjector.vhd)
// Elapsed time: 21 seconds
selectCodeEditor("FaultInjector.vhd", 225, 169); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 05m:02s
// Elapsed Time for: 'L.f': 05m:04s
// Elapsed time: 18 seconds
selectCodeEditor("FaultInjector.vhd", 92, 46); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 05m:22s
// Elapsed Time for: 'L.f': 05m:24s
typeControlKey(null, null, 'z');
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 05m:26s
// Elapsed Time for: 'L.f': 05m:28s
// Elapsed time: 13 seconds
selectCodeEditor("FaultInjector.vhd", 20, 81); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 13, 95); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 4, 112); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 4, 133); // ad (FaultInjector.vhd)
// Elapsed time: 25 seconds
selectCodeEditor("FaultInjector.vhd", 86, 78); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 359, 41); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 87, 89); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 596, 89); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 160, 109); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 499, 120); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 137, 122); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 403, 122); // ad (FaultInjector.vhd)
// Elapsed time: 15 seconds
selectCodeEditor("FaultInjector.vhd", 246, 149); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 63, 79); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 69, 98); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 84, 73); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 64, 100); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 52, 107); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 69, 129); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 94, 139); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 61, 78); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 56, 136); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 48, 137); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 404, 125); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 67, 159); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 61, 175); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 51, 194); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 62, 198); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 155, 199); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 304, 193); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 379, 203); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 425, 177); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 100, 162); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 103, 167); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 103, 167, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 106, 173); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 106, 173, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 152, 201); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 152, 201, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 462, 199); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 07m:42s
selectCodeEditor("FaultInjector.vhd", 435, 158); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 442, 141); // ad (FaultInjector.vhd)
// Elapsed Time for: 'L.f': 07m:44s
// Elapsed time: 11 seconds
selectCodeEditor("FaultInjector.vhd", 181, 68); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 178, 81); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 178, 81, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 229, 79); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 195, 73); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 195, 73, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 115, 97); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 300, 110); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 502, 151); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 222, 91); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 123, 104); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 114, 96); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 472, 104); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 236, 160); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 238, 181); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 283, 195); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 286, 195); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 432, 192); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 08m:32s
// Elapsed Time for: 'L.f': 08m:34s
selectCodeEditor("FaultInjector.vhd", 44, 267); // ad (FaultInjector.vhd)
// Elapsed time: 15 seconds
selectCodeEditor("FaultInjector.vhd", 81, 46); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 81, 46, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 190, 255); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 93, 347); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 227, 289); // ad (FaultInjector.vhd)
// Elapsed time: 18 seconds
selectCodeEditor("FaultInjector.vhd", 31, 292); // ad (FaultInjector.vhd)
// Elapsed time: 324 seconds
selectCodeEditor("FaultInjector.vhd", 234, 276); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 230, 280); // ad (FaultInjector.vhd)
// Elapsed time: 13 seconds
selectCodeEditor("FaultInjector.vhd", 36, 275); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 69, 279); // ad (FaultInjector.vhd)
// Elapsed time: 64 seconds
selectCodeEditor("FaultInjector.vhd", 130, 283); // ad (FaultInjector.vhd)
// Elapsed time: 13 seconds
selectCodeEditor("FaultInjector.vhd", 187, 298); // ad (FaultInjector.vhd)
// Elapsed time: 10 seconds
selectCodeEditor("FaultInjector.vhd", 151, 297); // ad (FaultInjector.vhd)
// Elapsed time: 25 seconds
selectCodeEditor("FaultInjector.vhd", 122, 116); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 122, 115, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 182, 295); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 130, 295); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 130, 295, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 80, 127); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 80, 127, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
// Elapsed time: 14 seconds
selectCodeEditor("FaultInjector.vhd", 224, 299); // ad (FaultInjector.vhd)
// Elapsed time: 13 seconds
selectCodeEditor("FaultInjector.vhd", 300, 300); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 189, 302); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 189, 302, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 326, 306); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 23 seconds
selectCodeEditor("FaultInjector.vhd", 366, 305); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 445, 291); // ad (FaultInjector.vhd)
// Elapsed time: 28 seconds
selectCodeEditor("FaultInjector.vhd", 217, 360); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 218, 372); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 264, 404); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 498, 264); // ad (FaultInjector.vhd)
// Elapsed time: 40 seconds
selectCodeEditor("FaultInjector.vhd", 25, 301); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 533, 299); // ad (FaultInjector.vhd)
// Elapsed time: 68 seconds
selectCodeEditor("FaultInjector.vhd", 514, 301); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 538, 293); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 36, 313); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 102, 197); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 102, 197, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 32, 328); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 32, 328, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 101, 134); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 101, 134, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 139, 329); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 357, 319); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 257, 315); // ad (FaultInjector.vhd)
// Elapsed time: 35 seconds
selectCodeEditor("FaultInjector.vhd", 263, 310); // ad (FaultInjector.vhd)
// Elapsed time: 14 seconds
selectCodeEditor("FaultInjector.vhd", 439, 316); // ad (FaultInjector.vhd)
// Elapsed time: 133 seconds
selectCodeEditor("FaultInjector.vhd", 661, 330); // ad (FaultInjector.vhd)
// Elapsed time: 41 seconds
selectCodeEditor("FaultInjector.vhd", 169, 297); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 167, 297); // ad (FaultInjector.vhd)
// Elapsed time: 239 seconds
selectCodeEditor("FaultInjector.vhd", 211, 313); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
selectCodeEditor("FaultInjector.vhd", 372, 295); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 329, 316); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 419, 380); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("FaultInjector.vhd", 425, 312); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 484, 378); // ad (FaultInjector.vhd)
// Elapsed time: 11 seconds
selectCodeEditor("FaultInjector.vhd", 321, 316); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 426, 319); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 373, 303); // ad (FaultInjector.vhd)
// HMemoryUtils.trashcanNow. Engine heap size: 1,380 MB. GUI used memory: 104 MB. Current time: 1/25/24, 7:40:00 AM CET
// Elapsed time: 79 seconds
selectCodeEditor("FaultInjector.vhd", 382, 267); // ad (FaultInjector.vhd)
// Elapsed time: 24 seconds
selectCodeEditor("FaultInjector.vhd", 374, 301); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 267, 313); // ad (FaultInjector.vhd)
// Elapsed time: 63 seconds
selectCodeEditor("FaultInjector.vhd", 122, 305); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 58, 287); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 58, 287, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 92, 313); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 12 seconds
selectCodeEditor("FaultInjector.vhd", 230, 282); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 243, 301); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 235, 306); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 289, 325); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 289, 325, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 272, 312); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 275, 317); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 319, 313); // ad (FaultInjector.vhd)
// Elapsed time: 125 seconds
selectCodeEditor("FaultInjector.vhd", 338, 313); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 321, 315); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 373, 313); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 496, 314); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 671, 315); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 860, 318); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 900, 318); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 128, 430); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 903, 312); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 909, 308); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 111, 336); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
// Elapsed time: 172 seconds
selectCodeEditor("FaultInjector.vhd", 49, 81); // ad (FaultInjector.vhd)
// Elapsed time: 31 seconds
selectCodeEditor("FaultInjector.vhd", 333, 250); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 22, 318); // ad (FaultInjector.vhd)
// Elapsed time: 34 seconds
selectCodeEditor("FaultInjector.vhd", 340, 280); // ad (FaultInjector.vhd)
// Elapsed time: 27 seconds
selectCodeEditor("FaultInjector.vhd", 308, 315); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 207, 298); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 65, 303); // ad (FaultInjector.vhd)
// Elapsed time: 16 seconds
selectCodeEditor("FaultInjector.vhd", 175, 319); // ad (FaultInjector.vhd)
// Elapsed time: 43 seconds
selectCodeEditor("FaultInjector.vhd", 124, 318); // ad (FaultInjector.vhd)
// Elapsed time: 22 seconds
selectCodeEditor("FaultInjector.vhd", 163, 347); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 241, 333); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 231, 341); // ad (FaultInjector.vhd)
// Elapsed time: 14 seconds
selectCodeEditor("FaultInjector.vhd", 113, 108); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 113, 108, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 248, 350); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 22 seconds
selectCodeEditor("FaultInjector.vhd", 434, 350); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 440, 372); // ad (FaultInjector.vhd)
// Elapsed time: 14 seconds
selectCodeEditor("FaultInjector.vhd", 16, 347); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 79, 114); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 79, 114, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 117, 348); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 117, 348, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 482, 370); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 42m:25s
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 42m:27s
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed Time for: 'L.f': 42m:29s
// Elapsed Time for: 'L.f': 42m:31s
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// Elapsed Time for: 'L.f': 42m:33s
// Elapsed Time for: 'L.f': 42m:35s
// Elapsed time: 17 seconds
selectCodeEditor("FaultInjector.vhd", 76, 373); // ad (FaultInjector.vhd)
// Elapsed time: 15 seconds
selectCodeEditor("FaultInjector.vhd", 95, 320); // ad (FaultInjector.vhd)
// Elapsed time: 10 seconds
selectCodeEditor("FaultInjector.vhd", 130, 323); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 122, 317); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 549, 304); // ad (FaultInjector.vhd)
// Elapsed time: 18 seconds
selectCodeEditor("FaultInjector.vhd", 222, 357); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 222, 357, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 223, 351); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 223, 351, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 517, 332); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("FaultInjector.vhd", 228, 403); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 43m:43s
// Elapsed Time for: 'L.f': 43m:45s
// Elapsed time: 35 seconds
selectCodeEditor("FaultInjector.vhd", 328, 277); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 241, 301); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 213, 382); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 251, 276); // ad (FaultInjector.vhd)
// Elapsed time: 11 seconds
selectCodeEditor("FaultInjector.vhd", 152, 354); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 152, 354, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 134, 278); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 69, 284); // ad (FaultInjector.vhd)
// Elapsed time: 10 seconds
selectCodeEditor("FaultInjector.vhd", 265, 286); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 111, 126); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 111, 126, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 294, 273); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 247, 279); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 247, 279, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 227, 282); // ad (FaultInjector.vhd)
// Elapsed time: 19 seconds
selectCodeEditor("FaultInjector.vhd", 259, 274); // ad (FaultInjector.vhd)
// Elapsed time: 17 seconds
selectCodeEditor("FaultInjector.vhd", 459, 283); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 233, 298); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 337, 298); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 474, 299); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("FaultInjector.vhd", 596, 312); // ad (FaultInjector.vhd)
// Elapsed Time for: 'L.f': 45m:51s
selectCodeEditor("FaultInjector.vhd", 536, 260); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 487, 232); // ad (FaultInjector.vhd)
// Elapsed Time for: 'L.f': 45m:53s
selectCodeEditor("FaultInjector.vhd", 435, 262); // ad (FaultInjector.vhd)
// Elapsed time: 14 seconds
selectCodeEditor("FaultInjector.vhd", 447, 300); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 471, 260); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 352, 334); // ad (FaultInjector.vhd)
// Elapsed time: 51 seconds
selectCodeEditor("FaultInjector.vhd", 189, 320); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 395, 349); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 401, 348); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 201, 323); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 200, 369); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 60, 344); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 10 seconds
selectCodeEditor("FaultInjector.vhd", 42, 330); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 151, 366); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 200, 367); // ad (FaultInjector.vhd)
// Elapsed time: 43 seconds
selectCodeEditor("FaultInjector.vhd", 239, 370); // ad (FaultInjector.vhd)
// Elapsed time: 21 seconds
selectCodeEditor("FaultInjector.vhd", 166, 340); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 167, 340, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 167, 340); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 165, 347); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 165, 347, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 188, 350); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 188, 350, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 162, 381); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 49, 366); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 51, 398); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 95, 407); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 71, 365); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 183, 396); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 210, 399); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 260, 402); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 100, 130); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 100, 130, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 87, 415); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 139, 400); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 139, 400, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 231, 414); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 80 seconds
selectCodeEditor("FaultInjector.vhd", 205, 438); // ad (FaultInjector.vhd)
// Elapsed time: 14 seconds
selectCodeEditor("FaultInjector.vhd", 491, 435); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 53, 453); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 18, 313); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 21, 434); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 18, 350); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 87, 433); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 15, 383); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 180, 386); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 47, 469); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 25 seconds
selectCodeEditor("FaultInjector.vhd", 137, 270); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 124, 285); // ad (FaultInjector.vhd)
// Elapsed time: 17 seconds
selectCodeEditor("FaultInjector.vhd", 94, 294); // ad (FaultInjector.vhd)
// Elapsed time: 20 seconds
selectCodeEditor("FaultInjector.vhd", 81, 348); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 81, 348, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 74, 302); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 13 seconds
selectCodeEditor("FaultInjector.vhd", 42, 365); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 94, 318); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 17, 383); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 240, 329); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
// Elapsed time: 16 seconds
selectCodeEditor("FaultInjector.vhd", 71, 314); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 232, 314); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 183, 313); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 343, 307); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
selectCodeEditor("FaultInjector.vhd", 424, 329); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
// Elapsed time: 10 seconds
selectCodeEditor("FaultInjector.vhd", 199, 319); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 199, 319, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 71, 316); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 71, 316, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 69, 318); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 450, 389); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 68, 416); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 202, 406); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 131, 347); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 131, 347, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 471, 321); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 330, 349); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 523, 362); // ad (FaultInjector.vhd)
// Elapsed time: 10 seconds
selectCodeEditor("FaultInjector.vhd", 19, 327); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 264, 282); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 255, 329); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 340, 378); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 77, 437); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 518, 414); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 18, 366); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 286, 362); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 227, 330); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 227, 330, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 134, 382); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 134, 382, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 307, 383); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 10, 410); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 55m:09s
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 55m:11s
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed Time for: 'L.f': 55m:13s
selectCodeEditor("FaultInjector.vhd", 17, 417); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 255, 454); // ad (FaultInjector.vhd)
// Elapsed Time for: 'L.f': 55m:15s
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// Elapsed Time for: 'L.f': 55m:17s
// Elapsed Time for: 'L.f': 55m:19s
// Elapsed time: 40 seconds
selectCodeEditor("FaultInjector.vhd", 211, 452); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 218, 457); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 74, 467); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 74, 467, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 87, 452); // ad (FaultInjector.vhd)
// Elapsed time: 61 seconds
selectCodeEditor("FaultInjector.vhd", 15, 380); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 238, 221); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 21, 228); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 270, 246); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 96, 307); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 29, 311); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 37, 314); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 70, 315); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 16, 430); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 83, 391); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 27, 400); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 154, 411); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("FaultInjector.vhd", 162, 409); // ad (FaultInjector.vhd)
// Elapsed Time for: 'L.f': 57m:28s
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 57m:30s
// Elapsed Time for: 'L.f': 57m:32s
// Elapsed time: 73 seconds
selectCodeEditor("FaultInjector.vhd", 272, 429); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 20, 364); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 283, 414); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 305, 91); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 179, 73); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 375, 83); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 370, 92); // ad (FaultInjector.vhd)
// Elapsed time: 46 seconds
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("FaultInjector.vhd", 253, 96); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 474, 184); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 427, 257); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 444, 181); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 496, 180); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 547, 178); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 652, 178); // ad (FaultInjector.vhd)
// HMemoryUtils.trashcanNow. Engine heap size: 1,380 MB. GUI used memory: 86 MB. Current time: 1/25/24, 8:10:00 AM CET
selectCodeEditor("FaultInjector.vhd", 547, 266); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 614, 98); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 548, 180); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 654, 178); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 547, 268); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 705, 264); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 283, 262); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 243, 340); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 453, 344); // ad (FaultInjector.vhd)
// Elapsed time: 41 seconds
selectCodeEditor("FaultInjector.vhd", 649, 175); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 546, 269); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 662, 266); // ad (FaultInjector.vhd)
// Elapsed time: 74 seconds
selectCodeEditor("FaultInjector.vhd", 538, 261); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 655, 265); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 215, 353); // ad (FaultInjector.vhd)
// Elapsed time: 11 seconds
selectCodeEditor("FaultInjector.vhd", 197, 269); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 322, 343); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 440, 260); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 435, 266); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 499, 266); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 433, 266); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 441, 263); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 484, 266); // ad (FaultInjector.vhd)
// Elapsed time: 17 seconds
selectCodeEditor("FaultInjector.vhd", 203, 260); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 232, 305, false, false, false, true, false); // ad (FaultInjector.vhd) - Popup Trigger
selectCodeEditor("FaultInjector.vhd", 175, 343); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 144, 326); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 130, 333); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 123, 276); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 123, 276, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
// Elapsed time: 60 seconds
selectCodeEditor("FaultInjector.vhd", 657, 330); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 202, 416); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 192, 421); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 203, 413); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
selectCodeEditor("FaultInjector.vhd", 503, 415); // ad (FaultInjector.vhd)
// Elapsed time: 31 seconds
selectCodeEditor("FaultInjector.vhd", 503, 418); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 681, 417); // ad (FaultInjector.vhd)
// Elapsed time: 13 seconds
selectCodeEditor("FaultInjector.vhd", 550, 418); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 656, 415); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:05m:54s
selectCodeEditor("FaultInjector.vhd", 127, 452); // ad (FaultInjector.vhd)
// Elapsed Time for: 'L.f': 01h:05m:56s
selectCodeEditor("FaultInjector.vhd", 549, 362); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:06m:02s
// Elapsed Time for: 'L.f': 01h:06m:04s
selectCodeEditor("FaultInjector.vhd", 82, 53); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 24, 63); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 24, 63, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 35, 63); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 35, 63, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
// Elapsed time: 15 seconds
selectCodeEditor("FaultInjector.vhd", 131, 467); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 131, 467, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 45, 481); // ad (FaultInjector.vhd)
// Elapsed time: 12 seconds
selectCodeEditor("FaultInjector.vhd", 166, 476); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 153, 470); // ad (FaultInjector.vhd)
// Elapsed time: 31 seconds
selectCodeEditor("FaultInjector.vhd", 166, 57); // ad (FaultInjector.vhd)
// Elapsed time: 11 seconds
selectCodeEditor("FaultInjector.vhd", 152, 152); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 152, 152, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
selectCodeEditor("FaultInjector.vhd", 153, 163); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 153, 163, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 140, 56); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 180, 129); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 180, 129, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 344, 57); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 315, 66); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 463, 56); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:07m:42s
// Elapsed Time for: 'L.f': 01h:07m:44s
selectTab((HResource) null, (HResource) null, "Messages", 1); // aa
selectCodeEditor("FaultInjector.vhd", 108, 440); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 49, 431); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 139, 440); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
// Elapsed time: 19 seconds
selectCodeEditor("FaultInjector.vhd", 417, 63); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:08m:38s
// Elapsed Time for: 'L.f': 01h:08m:40s
// Elapsed time: 17 seconds
selectCodeEditor("FaultInjector.vhd", 373, 73); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 133, 114); // ad (FaultInjector.vhd)
// Elapsed time: 16 seconds
selectCodeEditor("FaultInjector.vhd", 9, 465); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:09m:14s
// Elapsed Time for: 'L.f': 01h:09m:16s
selectCodeEditor("FaultInjector.vhd", 22, 466); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:09m:20s
// Elapsed Time for: 'L.f': 01h:09m:22s
// Elapsed time: 13 seconds
selectCodeEditor("FaultInjector.vhd", 104, 423); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 320, 420); // ad (FaultInjector.vhd)
typeControlKey(null, null, 'z');
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
typeControlKey(null, null, 'z');
// Elapsed Time for: 'L.f': 01h:09m:36s
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// Elapsed Time for: 'L.f': 01h:09m:38s
// Elapsed Time for: 'L.f': 01h:09m:40s
// Elapsed time: 27 seconds
selectCheckBox(PAResourceItoN.MsgView_INFORMATION_MESSAGES, (String) null, false); // f (PAResourceItoN.MsgView_INFORMATION_MESSAGES): FALSE
selectCheckBox(PAResourceItoN.MsgView_CRITICAL_WARNINGS, (String) null, true); // f (PAResourceItoN.MsgView_CRITICAL_WARNINGS): TRUE
selectCodeEditor("FaultInjector.vhd", 151, 467); // ad (FaultInjector.vhd)
// Elapsed time: 47 seconds
selectCodeEditor("FaultInjector.vhd", 110, 140); // ad (FaultInjector.vhd)
// Elapsed time: 36 seconds
selectCodeEditor("FaultInjector.vhd", 603, 213); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
// Elapsed time: 11 seconds
selectCodeEditor("FaultInjector.vhd", 504, 194); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 517, 216); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 518, 215); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 517, 221); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 572, 213); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 587, 215); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 637, 303); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 637, 388); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'v'); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 163, 469); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 163, 469, false, false, false, false, true); // ad (FaultInjector.vhd) - Double Click
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:12m:26s
// Elapsed Time for: 'L.f': 01h:12m:28s
// Elapsed time: 69 seconds
selectCodeEditor("FaultInjector.vhd", 123, 233); // ad (FaultInjector.vhd)
// Elapsed time: 50 seconds
selectCodeEditor("FaultInjector.vhd", 15, 297); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 3, 466); // ad (FaultInjector.vhd)
// Elapsed time: 45 seconds
selectCodeEditor("FaultInjector.vhd", 32, 46); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 15, 470); // ad (FaultInjector.vhd)
// Elapsed time: 95 seconds
selectCodeEditor("FaultInjector.vhd", 203, 354); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 150, 305); // ad (FaultInjector.vhd)
selectCodeEditor("FaultInjector.vhd", 137, 311); // ad (FaultInjector.vhd)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed Time for: 'L.f': 01h:16m:46s
// Elapsed Time for: 'L.f': 01h:16m:48s
// Elapsed time: 40 seconds
selectCodeEditor("FaultInjector.vhd", 340, 298); // ad (FaultInjector.vhd)
typeControlKey((HResource) null, "FaultInjector.vhd", 'c'); // ad (FaultInjector.vhd)
// Elapsed time: 99 seconds
selectCodeEditor("FaultInjector.vhd", 589, 270); // ad (FaultInjector.vhd)
